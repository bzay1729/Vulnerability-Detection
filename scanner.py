# src/scanner.py

import nmap


# Creating a scanner class that handles network scanning using nmap.

class Scanner:
    def __init__(self, target_ip, port_range='1-1024', scan_type='standard'):
        self.target_ip = target_ip
        self.port_range = port_range
        self.scan_type = scan_type
        self.nm = nmap.PortScanner()

    def check_vulnerabilities(self, port, service):
        vulnerabilities = {
            21: "Potentially vulnerable FTP service (Port 21)",
            22: "Potentially SSH misconfiguration (Port 22)",
            80: "Check for outdated HTTP services (Port 80)",
            443: "Check for outdated HTTPS services (Port 443)"

        }
        return vulnerabilities.get(port, f"No known vulnerabilities for {service} on Port {port}")

    def scan(self):
        if self.scan_type == "os_detection":
            scan_arguments = '-O'
        elif self.scan_type == "stealth_scan":
            scan_arguments = '-sS'
        elif self.scan_type == "aggressive_scan":
            scan_arguments = '-A'
        else:
            scan_arguments = ''
        self.nm.scan(self.target_ip, self.port_range, arguments=scan_arguments)

        all_results = []


# Saving Scanning result in csv or in mmysql


# def check_vulnerability(port, service):
#     vulnerabilities = {
#         21: "Potentially vulnerable FTP service (Port 21)",
#         22: "Potential SSH misconfiguration (Port 22)",
#         80: "Check for outdated HTTP services (Port 80)",
#         443: "Check for outdated HTTPS services (Port 443)"
#     }
#
#     if port in vulnerabilities:
#         return vulnerabilities[port]
#     return f"No known vulnerabilities for {service} on Port {port}"
#
# # Scans targeted IP.
# def scan_network(target_ip):
#     nm = nmap.PortScanner()
#     nm.scan(target_ip, '1-1024')
#     for host in nm.all_hosts():
#         print(f'Host: {host} ({nm[host].hostname()})')
#         print(f'State: {nm[host].state()}')
#         for protocol in nm[host].all_protocols():
#             print(f'Protocol: {protocol}')
#             ports = nm[host][protocol].keys()
#             for port in ports:
#                 service = nm[host][protocol][port]['name']
#                 state = nm[host][protocol][port]["state"]
#                 print(f'Port: {port}, State: {state}, Service: {service}')
#
#                 # Check for vulnerabilities
#                 vulnerability = check_vulnerability(port, service)
#                 print(f"Vulnerability Check: {vulnerability}")


if __name__ == '__main__':
    # for now, I am creating the default IP address.
    target = "192.168.1.1"
    # target = input("Enter the target IP: ")
    scan_network(target)
